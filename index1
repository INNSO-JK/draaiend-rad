<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8">
  <title>Draaiend Rad 3D Premium</title>
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Montserrat', sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
      background: radial-gradient(circle at center, #1c1f2b 0%, #0e111a 100%);
      color: #f4f4f4;
      overflow: hidden;
    }
    .wheel-container {
      perspective: 800px;
      transform-style: preserve-3d;
      position: relative;
    }
    canvas {
      border-radius: 50%;
      box-shadow:
        0 0 25px rgba(255, 255, 255, 0.15),
        0 8px 30px rgba(0, 0, 0, 0.6),
        inset 0 3px 10px rgba(255,255,255,0.15);
      background: radial-gradient(circle at 30% 30%, #202636, #0c0f18);
      transform: rotateX(12deg);
      transition: transform 0.3s ease;
    }
    canvas.spinning {
      animation: tilt 0.8s infinite ease-in-out alternate;
    }
    @keyframes tilt {
      0% { transform: rotateX(10deg) rotateZ(0deg); }
      100% { transform: rotateX(14deg) rotateZ(0deg); }
    }
    button {
      margin-top: 20px;
      padding: 12px 28px;
      font-size: 16px;
      cursor: pointer;
      border: none;
      border-radius: 8px;
      background: linear-gradient(135deg, #2b89e6, #174a91);
      color: white;
      font-weight: 600;
      letter-spacing: 0.5px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.4);
      transition: all 0.2s ease;
    }
    button:hover {
      background: linear-gradient(135deg, #3aa0ff, #1f5cc0);
      transform: translateY(-2px);
    }
    #winner {
      margin-top: 25px;
      font-size: 22px;
      font-weight: 700;
      color: #38ef7d;
      text-shadow: 0 0 10px rgba(56,239,125,0.5);
    }
    #options {
      margin-bottom: 25px;
      text-align: center;
    }
    textarea {
      width: 320px;
      height: 100px;
      border-radius: 8px;
      border: none;
      padding: 10px;
      font-family: 'Montserrat', sans-serif;
      font-size: 14px;
      background: rgba(255,255,255,0.1);
      color: #f4f4f4;
      backdrop-filter: blur(6px);
      resize: none;
    }
    textarea:focus {
      outline: 2px solid #2b89e6;
    }

    /* Conische spotlight (zaklamp effect) */
    .spotlight {
      position: absolute;
      top: -200px;
      right: -200px;
      width: 600px;
      height: 600px;
      background: radial-gradient(circle at 100px 100px, rgba(255,255,210,0.9) 0%, rgba(255,255,160,0.5) 20%, rgba(255,255,100,0.2) 45%, transparent 75%);
      clip-path: polygon(90% 0%, 100% 0%, 55% 100%, 35% 100%);
      opacity: 0;
      filter: blur(2px);
      transform: rotate(25deg);
      transition: opacity 0.4s ease;
      pointer-events: none;
      mix-blend-mode: screen;
    }
  </style>
</head>
<body>
  <div id="options">
    <p>Vul de opties in (Ã©Ã©n per regel):</p>
    <textarea id="inputOptions">Pizza
Syfke
Rico
Adam
Ivan
Tijan
Charmaine</textarea><br>
    <button onclick="updateOptions()">Update rad</button>
  </div>

  <div class="wheel-container">
    <canvas id="wheel" width="400" height="400"></canvas>
    <div id="spotlight" class="spotlight"></div>
  </div>

  <button onclick="spin()">ðŸŽ¯ Draai!</button>
  <div id="winner"></div>

  <audio id="tickSound" src="https://actions.google.com/sounds/v1/cartoon/wood_plank_flicks.ogg"></audio>

  <script>
    const canvas = document.getElementById("wheel");
    const ctx = canvas.getContext("2d");
    const tickSound = document.getElementById("tickSound");
    const spotlight = document.getElementById("spotlight");
    let options = ["Syfke", "Rico", "Adam", "Ivan", "Tijan", "Charmaine"];
    let startAngle = 0;
    let arc = Math.PI * 2 / options.length;
    let spinTimeout = null;
    let spinAngleStart = 0;
    let spinTime = 0;
    let spinTimeTotal = 0;
    let lastTickIndex = -1;

    function drawRouletteWheel() {
      const outsideRadius = 180;
      const textRadius = 135;
      const insideRadius = 25;

      ctx.clearRect(0, 0, 400, 400);
      ctx.save();
      ctx.translate(200, 200);

      const gradient = ctx.createRadialGradient(0, 0, 60, 0, 0, 180);
      gradient.addColorStop(0, "#ffffff10");
      gradient.addColorStop(1, "#00000060");
      ctx.fillStyle = gradient;
      ctx.beginPath();
      ctx.arc(0, 0, outsideRadius + 10, 0, 2 * Math.PI);
      ctx.fill();

      const colors = ["#5DC5C6", "#030E53", "#FFCED3"];
      ctx.font = 'bold 16px Montserrat';
      ctx.textBaseline = "middle";

      for (let i = 0; i < options.length; i++) {
        let angle = startAngle + i * arc;
        ctx.fillStyle = colors[i % colors.length];

        ctx.beginPath();
        ctx.arc(0, 0, outsideRadius, angle, angle + arc, false);
        ctx.arc(0, 0, insideRadius, angle + arc, angle, true);
        ctx.shadowColor = "rgba(0,0,0,0.4)";
        ctx.shadowBlur = 8;
        ctx.fill();

        ctx.save();
        ctx.fillStyle = "#fff";
        ctx.rotate(angle + arc / 2);
        ctx.textAlign = "right";
        ctx.fillText(options[i], textRadius, 0);
        ctx.restore();

        ctx.save();
        ctx.rotate(angle);
        ctx.beginPath();
        ctx.strokeStyle = "#E2B714";
        ctx.lineWidth = 3;
        ctx.moveTo(outsideRadius - 5, 0);
        ctx.lineTo(outsideRadius + 5, 0);
        ctx.stroke();
        ctx.restore();
      }

      ctx.restore();
      ctx.fillStyle = "#FF143C";
      ctx.beginPath();
      ctx.moveTo(200 - 12, 200 - (outsideRadius + 20));
      ctx.lineTo(200 + 12, 200 - (outsideRadius + 20));
      ctx.lineTo(200, 200 - (outsideRadius - 5));
      ctx.closePath();
      ctx.fill();
    }

    function rotateWheel() {
      spinTime += 30;
      if (spinTime >= spinTimeTotal) {
        canvas.classList.remove("spinning");
        stopRotateWheel();
        return;
      }
      if (!canvas.classList.contains("spinning")) {
        canvas.classList.add("spinning");
      }

      let spinAngle = spinAngleStart - easeOut(spinTime, 0, spinAngleStart, spinTimeTotal);
      startAngle += (spinAngle * Math.PI / 180);
      drawRouletteWheel();

      let degrees = startAngle * 180 / Math.PI + 90;
      let arcd = arc * 180 / Math.PI;
      let index = Math.floor((360 - (degrees % 360)) / arcd);
      if (index !== lastTickIndex) {
        tickSound.currentTime = 0;
        tickSound.play();
        lastTickIndex = index;
      }

      spinTimeout = setTimeout(rotateWheel, 30);
    }

    function stopRotateWheel() {
      clearTimeout(spinTimeout);
      let degrees = startAngle * 180 / Math.PI + 90;
      let arcd = arc * 180 / Math.PI;
      let index = Math.floor((360 - (degrees % 360)) / arcd);
      let text = options[index];

      // Spotlight gericht op het winnende vlak
      const angle = startAngle + index * arc + arc / 2;
      const x = 200 + Math.cos(angle) * 80;
      const y = 200 + Math.sin(angle) * 80;

      spotlight.style.transform = `rotate(25deg) translate(${x / 3}px, ${y / 3}px)`;
      spotlight.style.opacity = "1";

      // Sneller tonen en verdwijnen
      setTimeout(() => {
        spotlight.style.opacity = "0";
      }, 1600);

      document.getElementById("winner").innerText = "ðŸŽ‰ Het rad stopt op: " + text;
    }

    function easeOut(t, b, c, d) {
      const ts = (t/=d)*t;
      const tc = ts*t;
      return b+c*(tc + -3*ts + 3*t);
    }

    function spin() {
      spotlight.style.opacity = "0";
      document.getElementById("winner").innerText = "";
      spinAngleStart = Math.random() * 10 + 10;
      spinTime = 0;
      spinTimeTotal = Math.random() * 12000 + 16000; // 2x zo lang draaien
      rotateWheel();
    }

    function updateOptions() {
      const input = document.getElementById("inputOptions").value.trim();
      options = input.split(/\n+/);
      arc = Math.PI * 2 / options.length;
      drawRouletteWheel();
      document.getElementById("winner").innerText = "";
    }

    drawRouletteWheel();
  </script>
</body>
</html>
